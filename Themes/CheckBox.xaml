<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <Style x:Key="FilterCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border x:Name="LayoutRoot"
                            Background="#FF878787"
                            CornerRadius="3"
                            Cursor="Hand">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopShadow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomShadow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF1ABC9C" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="BottomShadow"
                                    Width="Auto"
                                    Height="Auto"
                                    Margin="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    BorderBrush="#26000000"
                                    BorderThickness="0,0,0,1"
                                    CornerRadius="2" />
                            <Border x:Name="TopShadow"
                                    Width="Auto"
                                    Height="Auto"
                                    Margin="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    BorderBrush="#FF27AE60"
                                    BorderThickness="0,1,0,0"
                                    CornerRadius="2"
                                    Visibility="Hidden" />
                            <TextBlock x:Name="textBlock"
                                       Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="{DynamicResource DefaultRegular}"
                                       FontSize="12"
                                       Foreground="White"
                                       Text="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel x:Name="LayoutRoot"
                                Margin="{TemplateBinding Padding}"
                                Orientation="Horizontal">
                        <Border x:Name="CheckBorder"
                                Width="16"
                                Height="16"
                                Margin="0,1,4,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Path x:Name="CheckMark"
                                      Width="10"
                                      Height="10"
                                      Margin="2"
                                      Data="F1 M 15,21L 22,28L 32.9999,14.0001L 35.9999,17.0001L 22,34L 12.0001,24L 15,21 Z "
                                      Fill="{TemplateBinding Foreground}"
                                      Stretch="Fill"
                                      Visibility="Collapsed" />
                                <Rectangle x:Name="Indeterminate"
                                           Width="8"
                                           Height="8"
                                           Margin="4"
                                           Fill="{TemplateBinding Foreground}"
                                           Visibility="Hidden" />
                            </Grid>
                        </Border>
                        <TextBlock VerticalAlignment="Center" Text="{TemplateBinding Content}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsThreeState, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Indeterminate" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Indeterminate" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBorder" Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
                            <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />
                            <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource ButtonTextHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CheckBorder" Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                            <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />
                            <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource ButtonTextPressed}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  checkbox-in-datagrid styles  -->
    <Style x:Key="DataGridCheckBoxStyle"
           BasedOn="{StaticResource {x:Type CheckBox}}"
           TargetType="{x:Type CheckBox}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style x:Key="DataGridEditingCheckBoxStyle"
           BasedOn="{StaticResource {x:Type CheckBox}}"
           TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

</ResourceDictionary>